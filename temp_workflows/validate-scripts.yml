name: Validate Scripts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g jshint
        
    - name: Validate script syntax
      run: |
        echo "验证脚本语法..."
        
        # 初始化验证结果
        validation_failed=false
        
        # 检查所有脚本文件
        find scripts -name "*.user.js" -type f | while read script_file; do
          echo "检查文件: $script_file"
          
          # 检查必需的元数据
          required_metadata=("@name" "@version" "@description" "@author" "@match")
          
          for metadata in "${required_metadata[@]}"; do
            if ! grep -q "^// $metadata" "$script_file"; then
              echo "❌ 错误: $script_file 缺少必需的元数据: $metadata"
              validation_failed=true
            fi
          done
          
          # 检查JavaScript语法
          if ! jshint "$script_file"; then
            echo "❌ 错误: $script_file 存在语法错误"
            validation_failed=true
          fi
          
          # 检查文件编码
          if ! file "$script_file" | grep -q "UTF-8"; then
            echo "⚠️  警告: $script_file 可能不是UTF-8编码"
          fi
          
          echo "✅ $script_file 验证完成"
        done
        
        # 检查是否有对应的README文件
        find scripts -name "*.user.js" -type f | while read script_file; do
          dir_path=$(dirname "$script_file")
          readme_file="$dir_path/README.md"
          
          if [ ! -f "$readme_file" ]; then
            echo "⚠️  警告: $script_file 所在目录缺少README.md文件"
          fi
        done
        
        if [ "$validation_failed" = true ]; then
          echo "❌ 验证失败"
          exit 1
        else
          echo "✅ 所有脚本验证通过"
        fi