name: Update README Script List

on:
  push:
    branches: [ main ]
    paths: 
      - 'scripts/**/*.user.js'
  pull_request:
    branches: [ main ]
    paths: 
      - 'scripts/**/*.user.js'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Update README with script list
      run: |
        echo "更新脚本列表..."
        
        # 创建临时文件存储脚本信息
        temp_file=$(mktemp)
        
        # 扫描所有脚本文件
        find scripts -name "*.user.js" -type f | while read script_file; do
          echo "处理文件: $script_file"
          
          # 提取脚本元数据
          name=$(grep -E "^// @name" "$script_file" | head -1 | sed 's/^\/\/ @name\s*//')
          description=$(grep -E "^// @description" "$script_file" | head -1 | sed 's/^\/\/ @description\s*//')
          version=$(grep -E "^// @version" "$script_file" | head -1 | sed 's/^\/\/ @version\s*//')
          
          # 获取文件最后修改日期
          modified_date=$(git log -1 --format="%ad" --date=short -- "$script_file" 2>/dev/null || date +%Y-%m-%d)
          
          # 生成安装链接
          raw_url="https://raw.githubusercontent.com/${{ github.repository }}/main/$script_file"
          install_link="[安装]($raw_url)"
          
          # 输出到临时文件
          if [ -n "$name" ]; then
            echo "| $name | $description | $install_link | $modified_date |" >> "$temp_file"
          fi
        done
        
        # 更新README文件
        if [ -s "$temp_file" ]; then
          # 备份原README
          cp README.md README.md.bak
          
          # 替换脚本列表部分
          sed '/<!-- SCRIPTS_LIST_START -->/,/<!-- SCRIPTS_LIST_END -->/{
            /<!-- SCRIPTS_LIST_START -->/r /dev/stdin
            /<!-- SCRIPTS_LIST_END -->/!d
          }' README.md.bak > README.md << EOF
        <!-- SCRIPTS_LIST_START -->
        | 脚本名称 | 描述 | 安装 | 更新日期 |
        |---------|------|------|----------|
        $(cat "$temp_file")
        <!-- SCRIPTS_LIST_END -->
        EOF
        else
          echo "没有找到脚本文件"
        fi
        
        # 清理临时文件
        rm -f "$temp_file"
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        if git diff --cached --quiet; then
          echo "没有变化需要提交"
        else
          git commit -m "自动更新脚本列表 [skip ci]"
          git push
        fi